"""Image type base64

Revision ID: 14a826bb7339
Revises: 529f48d8cb7a
Create Date: 2025-01-04 19:09:46.478925

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '14a826bb7339'
down_revision: Union[str, None] = '529f48d8cb7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('book', 'image',
               existing_type=postgresql.BYTEA(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('book', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('order', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.drop_column('order', 'billing_address')
    op.drop_column('order', 'shipping_address')
    op.alter_column('user', 'phone_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'phone_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('order', sa.Column('shipping_address', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('order', sa.Column('billing_address', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('order', 'user_id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('book', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('book', 'image',
               existing_type=sa.TEXT(),
               type_=postgresql.BYTEA(),
               existing_nullable=False)
    # ### end Alembic commands ###
